name: Vercel Preview Deployment

on:
  push:
    branches-ignore:
      - main

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.deploy.outputs.url }}
      deployment-status: ${{ steps.deploy.outputs.status }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: |
          export VERCEL_TOKEN='${{ secrets.VERCEL_TOKEN }}'
          vercel pull --yes --environment=preview --token="$VERCEL_TOKEN"

      - name: Run ESLint
        run: npm run lint -- --max-warnings=0

      - name: Run TypeScript checks
        run: npx tsc --noEmit

      - name: Verify Next.js build
        run: npm run build

      - name: Build Project Artifacts
        run: |
          export VERCEL_TOKEN='${{ secrets.VERCEL_TOKEN }}'
          vercel build --token="$VERCEL_TOKEN"

      - name: Deploy Project Artifacts
        id: deploy
        run: |
          export VERCEL_TOKEN='${{ secrets.VERCEL_TOKEN }}'
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token="$VERCEL_TOKEN")
          echo "url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "status=success" >> $GITHUB_OUTPUT
          echo "Preview deployed to: $DEPLOYMENT_URL"

  create-pr-on-success:
    needs: deploy-preview
    runs-on: ubuntu-latest
    if: |
      success() && 
      github.ref == 'refs/heads/development' &&
      needs.deploy-preview.outputs.deployment-status == 'success'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if PR already exists
        id: check-pr
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_EXISTS=$(gh pr list --head development --base main --state open --json number --jq '.[0].number')
          if [ -z "$PR_EXISTS" ]; then
            echo "pr_exists=false" >> $GITHUB_OUTPUT
          else
            echo "pr_exists=true" >> $GITHUB_OUTPUT
            echo "pr_number=$PR_EXISTS" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.check-pr.outputs.pr_exists == 'false'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr create \
            --title "🚀 Deploy: Development to Production" \
            --body "## 🎯 Auto-Generated Pull Request

          This PR was automatically created after successful preview deployment.

          ### ✅ Preview Deployment
          - **Status**: Success
          - **URL**: ${{ needs.deploy-preview.outputs.deployment-url }}
          - **Branch**: \`development\`
          - **Target**: \`main\`

          ### 📋 Checks Passed
          - ✅ ESLint validation
          - ✅ TypeScript compilation
          - ✅ Next.js build verification
          - ✅ Vercel preview deployment

          ### 🔍 Review Checklist
          - [ ] Code changes reviewed
          - [ ] Preview deployment tested
          - [ ] No breaking changes
          - [ ] Documentation updated (if needed)

          ---
          **Generated by**: GitHub Actions
          **Workflow**: Preview Deployment
          **Commit**: \`${{ github.sha }}\`" \
            --base main \
            --head development

      - name: Comment on existing PR
        if: steps.check-pr.outputs.pr_exists == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr comment ${{ steps.check-pr.outputs.pr_number }} \
            --body "## ✅ New Preview Deployment Successful

          **Commit**: \`${{ github.sha }}\`
          **Deployment URL**: ${{ needs.deploy-preview.outputs.deployment-url }}
          **Branch**: \`development\`

          All CI checks passed successfully! Ready for review."
